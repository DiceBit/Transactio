networks:
  kong-net:
    driver: bridge

volumes:
  pg-data: {}

services:

  # Postgres: The database used by Kong
  kong-database:
    image: postgres:13
    container_name: kong-database
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong


  # Kong database migration
  kong-migration:
    image: kong:latest
    container_name: kong-migration
    restart: on-failure
    command: "kong migrations bootstrap"
    depends_on:
      - kong-database
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong


  # Kong: The API Gateway
  kong:
    image: kong:latest
    container_name: kong
    restart: always
    ports:
      - "8000:8000" #api gateway
      - "8001:8001" #admin
#    depends_on:
#      - kong-database
#      - kong-migration
    networks:
      - kong-net
    environment:
      KONG_DATABASE: off
#      KONG_DATABASE: postgres
#      KONG_PG_HOST: kong-database
#      KONG_PG_PORT: 5432
#      KONG_PG_USER: kong
#      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      #KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
    volumes:
      - ./kong.yml:/usr/local/kong/kong.yml

  konga:
    image: pantsel/konga:next
    container_name: konga
    restart: always
    links:
      - kong:kong
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
    networks:
      - kong-net
    environment:
      NODE_ENV: production